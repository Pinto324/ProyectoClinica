{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ModalAgregarExamenesConsultaComponent_ng_container_0_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const examenes_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", examenes_r3.nombreExamen);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(examenes_r3.nombreExamen);\n  }\n}\nfunction ModalAgregarExamenesConsultaComponent_ng_container_0_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ModalAgregarExamenesConsultaComponent_ng_container_0_tr_21_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.EliminarExamenesSolicitados(item_r4));\n    });\n    i0.ɵɵtext(5, \" Eliminar Examen\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r4);\n  }\n}\nfunction ModalAgregarExamenesConsultaComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n    i0.ɵɵtext(8, \"Selecione un examen para agregar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function ModalAgregarExamenesConsultaComponent_ng_container_0_Template_select_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.selectedOption = $event);\n    });\n    i0.ɵɵtemplate(10, ModalAgregarExamenesConsultaComponent_ng_container_0_option_10_Template, 2, 2, \"option\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ModalAgregarExamenesConsultaComponent_ng_container_0_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.AgregarExamenSeleccionado());\n    });\n    i0.ɵɵtext(12, \"Agregar Examen seleccionado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"table\")(14, \"thead\")(15, \"tr\")(16, \"th\");\n    i0.ɵɵtext(17, \"Examenes Agregados:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Acci\\u00F3n\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"tbody\");\n    i0.ɵɵtemplate(21, ModalAgregarExamenesConsultaComponent_ng_container_0_tr_21_Template, 6, 1, \"tr\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 11)(23, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ModalAgregarExamenesConsultaComponent_ng_container_0_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.Finalizar());\n    });\n    i0.ɵɵtext(24, \"Finalizar\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" Agregar Examenes a la consulta id: \", ctx_r0.datos.IdConsultas, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.examenes);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ExamenesAgregados);\n  }\n}\nexport class ModalAgregarExamenesConsultaComponent {\n  constructor(http) {\n    this.http = http;\n    this.chow = false;\n    this.MensajeDeConfirmacion = false;\n  }\n  ngOnInit() {}\n  Mostrar(datos) {\n    this.datos = datos;\n    console.log(\"disque hizo true\");\n    this.chow = true;\n    this.subscribirse();\n  }\n  subscribirse() {\n    this.getExamenes().subscribe(examen => {\n      this.examenes = examen;\n    });\n    this.getExamenesAgregados().subscribe(examen => {\n      this.ExamenesAgregados = examen;\n    });\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorTipoDeExamenes?accion=obtenerExamenes';\n    return this.http.get(url);\n  }\n  getExamenesAgregados() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&id=' + this.datos.IdConsultas;\n    return this.http.get(url);\n  }\n  AgregarExamenSeleccionado() {\n    const nombre = this.selectedOption;\n    const body = {\n      Nombre: this.selectedOption\n    };\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=CrearExamenAsignado&NombreExamen=${nombre}&IdConsulta=${this.datos.IdConsultas}`, body).subscribe(response => {\n      alert('Se agrego el examen a la consulta');\n      this.subscribirse();\n      // Actualizar la lista de especialidades agregadas\n    }, error => {\n      if (error.status === 400) {\n        alert('No se encontro el examen pedido');\n      } else if (error.status === 409) {\n        alert('No puedes agregar el mismo examen dos veces ');\n      }\n    });\n  }\n  EliminarExamenesSolicitados(e) {\n    this.http.delete('http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&Nombre=' + e + '&IdConsulta=' + this.datos.IdConsultas).subscribe(response => {\n      alert('Se elimino el examen de la consulta con exito');\n    }, error => {\n      this.subscribirse();\n      alert('Ocurrio un error');\n    });\n  }\n  Finalizar() {\n    if (this.MensajeDeConfirmacion) {\n      this.chow = false;\n    } else {\n      alert(\"Recuerda que luego no podras agregar más examenes a la consulta, si ya acabaste apacha finalizar otra vez\");\n      this.MensajeDeConfirmacion = true;\n    }\n  }\n}\nModalAgregarExamenesConsultaComponent.ɵfac = function ModalAgregarExamenesConsultaComponent_Factory(t) {\n  return new (t || ModalAgregarExamenesConsultaComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nModalAgregarExamenesConsultaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ModalAgregarExamenesConsultaComponent,\n  selectors: [[\"app-modal-agregar-examenes-consulta\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"modalC\"], [1, \"modalC-content\"], [1, \"modalc-header\"], [1, \"modalc-title\"], [1, \"modalC-container\"], [\"for\", \"especialidad\"], [\"name\", \"selectedOption\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"botones\"], [3, \"value\"]],\n  template: function ModalAgregarExamenesConsultaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ModalAgregarExamenesConsultaComponent_ng_container_0_Template, 25, 4, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.chow);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".modalC[_ngcontent-%COMP%] {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left:0;\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    padding: 16px;\\r\\n    background: rgba(0, 0, 0, 0.75);\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    overflow-y: auto;\\r\\n    z-index: 200;\\r\\n  }\\r\\n.modalC-content[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n  max-width: 500px;\\r\\n}\\r\\n.modalc-header[_ngcontent-%COMP%] {\\r\\n  height: 93px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n  padding: 0 32px;\\r\\n  background-color:#eccb8f;\\r\\n  background-image: radial-gradient(circle at center center,#e6e6e6,#ffffff) repeating-radial-gradient((circle at center center, #e6e6e6 ,#e6e6e6,20px,transparent 40px,transparent 20px));\\r\\n  background-blend-mode: multiply;\\r\\n  background-Size: cover;\\r\\n  background-position:center;\\r\\n  border-radius: 4px 4px 0 0;\\r\\n}\\r\\nselect[_ngcontent-%COMP%]{\\r\\n  padding: 10px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 100%;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 5px;\\r\\n  border: 2px solid black;\\r\\n}\\r\\n  svg[_ngcontent-%COMP%]{\\r\\n    height:45px;\\r\\n    width: 45px;\\r\\n  }\\r\\n  svg[_ngcontent-%COMP%]:hover {\\r\\n    cursor: pointer;\\r\\n    opacity: 0.75;\\r\\n}\\r\\n.modalc-title[_ngcontent-%COMP%]{\\r\\n  font-size: 24px;\\r\\n  font-weight: 600;\\r\\n  color: black;\\r\\n}\\r\\n.modalC-container[_ngcontent-%COMP%]{\\r\\n  padding: 32px;\\r\\n  background: #fff;\\r\\n  border-radius: 0 0 4px 4px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.botones[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  justify-content:space-between;\\r\\n  align-items: center;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 10px 20px;\\r\\n  border: none;\\r\\n  border-radius: 5px;\\r\\n  color: #000000;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s ease;\\r\\n  background-color: rgb(246, 255, 123);\\r\\n  border: 2px solid black;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n  background-color: rgb(156, 160, 88);\\r\\n}\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n  margin-bottom: 20px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  padding: 12px;\\r\\n  text-align: left;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%] {\\r\\n  background-color: #f2f2f2;\\r\\n  font-weight: bold;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50ZXMvaG9tZS1tZWRpY28vbWVkaWNvLW1lbnUtY29uc3VsdGFzL2Zvcm0tY29uc3VsdGEvbW9kYWwtYWdyZWdhci1leGFtZW5lcy1jb25zdWx0YS9tb2RhbC1hZ3JlZ2FyLWV4YW1lbmVzLWNvbnN1bHRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsTUFBTTtJQUNOLE1BQU07SUFDTixXQUFXO0lBQ1gsYUFBYTtJQUNiLGFBQWE7SUFDYiwrQkFBK0I7SUFDL0IsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLFlBQVk7RUFDZDtBQUNGO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsOEJBQThCO0VBQzlCLGVBQWU7RUFDZix3QkFBd0I7RUFDeEIsd0xBQXdMO0VBQ3hMLCtCQUErQjtFQUMvQixzQkFBc0I7RUFDdEIsMEJBQTBCO0VBQzFCLDBCQUEwQjtBQUM1QjtBQUNBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQix1QkFBdUI7QUFDekI7RUFDRTtJQUNFLFdBQVc7SUFDWCxXQUFXO0VBQ2I7RUFDQTtJQUNFLGVBQWU7SUFDZixhQUFhO0FBQ2pCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZDtBQUNBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQiwwQkFBMEI7RUFDMUIsYUFBYTtFQUNiLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCxZQUFZO0VBQ1osNkJBQTZCO0VBQzdCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsb0NBQW9DO0VBQ3BDLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsbUNBQW1DO0FBQ3JDO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsQyB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OjA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBwYWRkaW5nOiAxNnB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjc1KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gICAgei1pbmRleDogMjAwO1xyXG4gIH1cclxuLm1vZGFsQy1jb250ZW50e1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogNTAwcHg7XHJcbn1cclxuLm1vZGFsYy1oZWFkZXIge1xyXG4gIGhlaWdodDogOTNweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHBhZGRpbmc6IDAgMzJweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiNlY2NiOGY7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCBjZW50ZXIgY2VudGVyLCNlNmU2ZTYsI2ZmZmZmZikgcmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudCgoY2lyY2xlIGF0IGNlbnRlciBjZW50ZXIsICNlNmU2ZTYgLCNlNmU2ZTYsMjBweCx0cmFuc3BhcmVudCA0MHB4LHRyYW5zcGFyZW50IDIwcHgpKTtcclxuICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xyXG4gIGJhY2tncm91bmQtU2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4IDRweCAwIDA7XHJcbn1cclxuc2VsZWN0e1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxufVxyXG4gIHN2Z3tcclxuICAgIGhlaWdodDo0NXB4O1xyXG4gICAgd2lkdGg6IDQ1cHg7XHJcbiAgfVxyXG4gIHN2Zzpob3ZlciB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBvcGFjaXR5OiAwLjc1O1xyXG59XHJcbi5tb2RhbGMtdGl0bGV7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcbi5tb2RhbEMtY29udGFpbmVye1xyXG4gIHBhZGRpbmc6IDMycHg7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuLmJvdG9uZXN7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5idXR0b24ge1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGNvbG9yOiAjMDAwMDAwO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDYsIDI1NSwgMTIzKTtcclxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxufVxyXG5idXR0b246aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE1NiwgMTYwLCA4OCk7XHJcbn1cclxudGFibGUge1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbnRoLCB0ZCB7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG59XHJcblxyXG50aCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ModalAgregarExamenesConsultaComponent","constructor","http","ngOnInit","Mostrar","datos","console","log","chow","subscribirse","getExamenes","subscribe","examen","examenes","getExamenesAgregados","ExamenesAgregados","url","get","IdConsultas","AgregarExamenSeleccionado","nombre","selectedOption","body","Nombre","post","response","alert","error","status","EliminarExamenesSolicitados","e","delete","Finalizar","MensajeDeConfirmacion","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-menu-consultas\\form-consulta\\modal-agregar-examenes-consulta\\modal-agregar-examenes-consulta.component.html","C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-menu-consultas\\form-consulta\\modal-agregar-examenes-consulta\\modal-agregar-examenes-consulta.component.ts"],"sourcesContent":["<ng-container *ngIf=\"chow\">\n    <div class=\"modalC\">\n        <div class=\"modalC-content\">\n            <div class=\"modalc-header\">\n                <h4 class=\"modalc-title\">\n                    Agregar Examenes a la consulta id: {{ datos.IdConsultas }}\n                </h4>\n            </div>\n            <!-- Cuerpo  -->\n                <div class=\"modalC-container\"> \n                    <label for=\"especialidad\">Selecione un examen para agregar</label>\n                    <select name=\"selectedOption\" [(ngModel)]=\"selectedOption\">\n                        <option *ngFor=\"let examenes of examenes\" [value]=\"examenes.nombreExamen\">{{examenes.nombreExamen}}</option>\n                    </select>\n                    <button (click)=\" AgregarExamenSeleccionado()\">Agregar Examen seleccionado</button>\n                    <table>\n                        <thead>\n                          <tr>\n                            <th>Examenes Agregados:</th>\n                            <th>Acción</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr *ngFor=\"let item of ExamenesAgregados\">\n                            <td>{{ item }}</td>\n                            <td><button (click)=\"EliminarExamenesSolicitados(item)\"> Eliminar Examen</button></td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    <div class=\"botones\">\n                        <button (click)=\"Finalizar()\">Finalizar</button>\n                    </div>\n                </div>\n            </div>\n        </div>          \n</ng-container>\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-modal-agregar-examenes-consulta',\n  templateUrl: './modal-agregar-examenes-consulta.component.html',\n  styleUrls: ['./modal-agregar-examenes-consulta.component.css']\n})\nexport class ModalAgregarExamenesConsultaComponent {\n  datos: any;\n  public chow = false;\n  examenes: any;\n  public selectedOption: any;\n  ExamenesAgregados: any;\n  MensajeDeConfirmacion = false;\n  constructor(private http: HttpClient  ) { }\n  ngOnInit() : void  {\n\n  }\n  Mostrar(datos: any){\n    this.datos = datos;\n    console.log(\"disque hizo true\");\n    this.chow = true;\n    this.subscribirse();\n\n  }\n  subscribirse(){\n    this.getExamenes().subscribe(examen => {\n      this.examenes = examen;\n    });\n    this.getExamenesAgregados().subscribe(examen => {\n      this.ExamenesAgregados = examen;\n    })\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorTipoDeExamenes?accion=obtenerExamenes';\n    return this.http.get<any[]>(url);\n  }\n  getExamenesAgregados(){\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&id='+this.datos.IdConsultas;\n    return this.http.get<any[]>(url);\n  }\n  AgregarExamenSeleccionado(){\n    const nombre = this.selectedOption;\n    const body = {Nombre: this.selectedOption};\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=CrearExamenAsignado&NombreExamen=${nombre}&IdConsulta=${this.datos.IdConsultas}`, body).subscribe(\n      response => {\n        alert('Se agrego el examen a la consulta');\n        this.subscribirse();\n        // Actualizar la lista de especialidades agregadas\n      },\n      error => {\n        if (error.status === 400) {\n          alert('No se encontro el examen pedido');\n        } else if(error.status === 409) {\n          alert('No puedes agregar el mismo examen dos veces ');\n        }\n      }\n    );\n  }\n  EliminarExamenesSolicitados(e: any){\n    this.http.delete('http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&Nombre='+e+'&IdConsulta='+this.datos.IdConsultas).subscribe(\n      (response) => {\n        alert('Se elimino el examen de la consulta con exito');\n      },\n      (error) => {\n        this.subscribirse();\n        alert('Ocurrio un error');\n      }\n    );\n  }\n  Finalizar(){\n    if(this.MensajeDeConfirmacion){\n      this.chow = false;\n    }else{\n      alert(\"Recuerda que luego no podras agregar más examenes a la consulta, si ya acabaste apacha finalizar otra vez\");\n      this.MensajeDeConfirmacion = true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}