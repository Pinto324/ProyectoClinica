{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../../Services/user\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction MedicoHorariosComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const numero_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", numero_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(numero_r3);\n  }\n}\nfunction MedicoHorariosComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const numero_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", numero_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(numero_r4);\n  }\n}\nfunction MedicoHorariosComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const e_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r5.HoraEntrada);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r5.HoraSalida);\n  }\n}\nexport class MedicoHorariosComponent {\n  constructor(http, UserService) {\n    this.http = http;\n    this.UserService = UserService;\n    this.horaEntrada = \"\";\n    this.horaSalida = \"\";\n    this.horarios = [];\n    this.numeros = Array.from({\n      length: 24\n    }, (_, i) => ('0' + (i + 1)).slice(-2));\n  }\n  ngOnInit() {\n    this.mostrarHorarios();\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorHorario?accion=obtenerHorarioId&id=' + this.UserService.getId();\n    return this.http.get(url);\n  }\n  ////////////////////////////////\n  //Metodo para mostrar horarios en la tabla\n  mostrarHorarios() {\n    this.getExamenes().subscribe(especialidadesAgregadas => {\n      this.horarios = especialidadesAgregadas;\n    });\n  }\n  //metodo para crear Horarios\n  CrearHorarioNuevo() {\n    if (this.horaEntrada === \"\" || this.horaSalida === \"\") {\n      alert(\"llena ambos campos para continuar\");\n    } else {\n      const HoraEntrada = this.horaEntrada;\n      const HoraSalida = this.horaSalida;\n      const IdMedico = this.UserService.getId();\n      const body = {\n        HoraEntrada: HoraEntrada,\n        HoraSalida: HoraSalida,\n        IdMedico: IdMedico\n      };\n      this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorHorario?accion=CrearHorario&HEntrada=${HoraEntrada}&HSalida=${HoraSalida}&IdMedico=${IdMedico}`, body).subscribe(response => {\n        if (response === 201) {\n          // El horario se creó exitosamente\n          this.mostrarHorarios();\n          alert('Horario creado existosamente.');\n        }\n      }, error => {\n        if (error.status === 409) {\n          alert('No se puede agregar el horario, se solapa con otro horario existente.');\n        }\n      });\n    }\n  }\n}\nMedicoHorariosComponent.ɵfac = function MedicoHorariosComponent_Factory(t) {\n  return new (t || MedicoHorariosComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.UserService));\n};\nMedicoHorariosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MedicoHorariosComponent,\n  selectors: [[\"app-medico-horarios\"]],\n  decls: 27,\n  vars: 5,\n  consts: [[\"id\", \"principal\"], [1, \"form-group\"], [\"for\", \"especialidad\"], [\"name\", \"selectedOption\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function MedicoHorariosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Enviar solicitud de nuevo horario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Hora de entrada:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function MedicoHorariosComponent_Template_select_ngModelChange_7_listener($event) {\n        return ctx.horaEntrada = $event;\n      });\n      i0.ɵɵtemplate(8, MedicoHorariosComponent_option_8_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 2);\n      i0.ɵɵtext(10, \"Hora de salida:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function MedicoHorariosComponent_Template_select_ngModelChange_11_listener($event) {\n        return ctx.horaSalida = $event;\n      });\n      i0.ɵɵtemplate(12, MedicoHorariosComponent_option_12_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function MedicoHorariosComponent_Template_button_click_13_listener() {\n        return ctx.CrearHorarioNuevo();\n      });\n      i0.ɵɵtext(14, \"Agregar Horario\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"h2\");\n      i0.ɵɵtext(17, \"Horarios Agregados\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"table\")(19, \"thead\")(20, \"tr\")(21, \"th\");\n      i0.ɵɵtext(22, \"Hora de entrada:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Hora de salida\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"tbody\");\n      i0.ɵɵtemplate(26, MedicoHorariosComponent_tr_26_Template, 5, 2, \"tr\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.horaEntrada);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.numeros);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.horaSalida);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.numeros);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.horarios);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MedicoHorariosComponent","constructor","http","UserService","Array","from","length","_","i","slice","ngOnInit","mostrarHorarios","getExamenes","url","getId","get","subscribe","especialidadesAgregadas","horarios","CrearHorarioNuevo","horaEntrada","horaSalida","alert","HoraEntrada","HoraSalida","IdMedico","body","post","response","error","status","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-horarios\\medico-horarios.component.html","C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-horarios\\medico-horarios.component.ts"],"sourcesContent":["<div id=\"principal\">\r\n    <h2>Enviar solicitud de nuevo horario:</h2>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"especialidad\">Hora de entrada:</label>\r\n        <select name=\"selectedOption\" [(ngModel)]=\"horaEntrada\">\r\n          <option *ngFor=\"let numero of numeros\" [value]=\"numero\">{{numero}}</option>\r\n        </select>\r\n        <label for=\"especialidad\">Hora de salida:</label>\r\n        <select name=\"selectedOption\" [(ngModel)]=\"horaSalida\">\r\n          <option *ngFor=\"let numero of numeros\" [value]=\"numero\">{{numero}}</option>\r\n        </select>\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\" CrearHorarioNuevo()\">Agregar Horario</button>\r\n      </div>\r\n    </form>\r\n</div>\r\n<div id=\"principal\">\r\n  <h2>Horarios Agregados</h2>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Hora de entrada:</th>\r\n        <th>Hora de salida</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let e of horarios\">\r\n        <td>{{ e.HoraEntrada }}</td>\r\n        <td>{{ e.HoraSalida }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>","import { Component } from '@angular/core';\nimport { UserService } from '../../../../Services/user';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-medico-horarios',\n  templateUrl: './medico-horarios.component.html',\n  styleUrls: ['./medico-horarios.component.css']\n})\nexport class MedicoHorariosComponent {\n  horaEntrada: String=\"\";\n  horaSalida: String=\"\";\n  horarios: any[] = [];\n  numeros = Array.from({length: 24}, (_, i) => ('0' + (i+1)).slice(-2));\n  constructor(private http: HttpClient, private UserService: UserService){}\n\n  ngOnInit() : void  {\n    this.mostrarHorarios();\n  }\n\n  getExamenes(){\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorHorario?accion=obtenerHorarioId&id='+this.UserService.getId();\n    return this.http.get<any[]>(url);\n  }\n  ////////////////////////////////\n  //Metodo para mostrar horarios en la tabla\n  mostrarHorarios(){\n    this.getExamenes().subscribe(especialidadesAgregadas => {\n      this.horarios = especialidadesAgregadas;\n    })\n  }\n    //metodo para crear Horarios\n    CrearHorarioNuevo(){\n      if(this.horaEntrada === \"\"||this.horaSalida === \"\"){\n        alert(\"llena ambos campos para continuar\");\n      }else{\n        const HoraEntrada = this.horaEntrada;\n        const HoraSalida = this.horaSalida;\n        const IdMedico = this.UserService.getId();\n        const body = { HoraEntrada: HoraEntrada, HoraSalida: HoraSalida, IdMedico: IdMedico};\n        this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorHorario?accion=CrearHorario&HEntrada=${HoraEntrada}&HSalida=${HoraSalida}&IdMedico=${IdMedico}`, body).subscribe(\n          response => {\n            if (response === 201) {\n              // El horario se creó exitosamente\n              this.mostrarHorarios();\n              alert('Horario creado existosamente.');\n            }\n          },\n          error => {\n            if (error.status=== 409) {\n              alert('No se puede agregar el horario, se solapa con otro horario existente.');\n            } \n          }\n        );\n      }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}