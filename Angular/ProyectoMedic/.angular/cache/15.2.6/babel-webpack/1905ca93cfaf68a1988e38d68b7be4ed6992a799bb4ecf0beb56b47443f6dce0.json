{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeMedicoComponent = class HomeMedicoComponent {\n  constructor(http, UserService) {\n    this.http = http;\n    this.UserService = UserService;\n    this.url = 'http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico';\n    this.NoHorarios = false;\n    this.NoEspecialidades = false;\n    this.Horario = [];\n    this.Especialidad = [];\n    this.EnvioEspecialidad = true;\n    this.mostrarFormularioEspecialidad = false;\n    this.mostrarFormularioHorario = false;\n    this.mostrarFormularioConsulta = false;\n    this.mostrarFormularioHistorialMedico = false;\n    this.mostrarMenuReportes = false;\n  }\n  obtenerDatos(parametro) {\n    const options = {\n      params: {\n        miParametro: parametro\n      }\n    };\n    return this.http.get(this.url, options);\n  }\n  ngOnInit() {\n    this.getHistorialPaciente().subscribe(consultas => {\n      this.Horario = consultas;\n      this.getEspecialidadesAgregadas().subscribe(especialidadesAgregadas => {\n        this.Especialidad = especialidadesAgregadas;\n        this.ComprobarPrimerInicio();\n      });\n    });\n  }\n  //metodo get las consultas para el historial\n  getHistorialPaciente() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorHorario?accion=obtenerHorarioId&id=' + this.UserService.getId();\n    return this.http.get(url);\n  }\n  getEspecialidadesAgregadas() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=obtenerEspecialidadesAgregadasMedicos&IdMedico=' + this.UserService.getId();\n    return this.http.get(url);\n  }\n  abrirFormularioEspecialidad() {\n    this.cerrarFormularios();\n    this.mostrarFormularioEspecialidad = true;\n  }\n  abrirFormularioHorario() {\n    this.cerrarFormularios();\n    this.mostrarFormularioHorario = true;\n  }\n  abrirFormularioConsulta() {\n    this.cerrarFormularios();\n    this.mostrarFormularioConsulta = true;\n  }\n  abrirFormularioHistorialMedico() {\n    this.cerrarFormularios();\n    this.mostrarFormularioHistorialMedico = true;\n  }\n  abrirMenuReportes() {\n    this.cerrarFormularios();\n    this.mostrarMenuReportes = true;\n  }\n  cerrarFormularios() {\n    this.mostrarFormularioEspecialidad = false;\n    this.mostrarFormularioHorario = false;\n    this.mostrarFormularioConsulta = false;\n    this.mostrarFormularioHistorialMedico = false;\n    this.mostrarMenuReportes = false;\n    this.EnvioEspecialidad = false;\n  }\n  ComprobarPrimerInicio() {\n    if (Array.isArray(this.Horario) && this.Horario.length > 0) {\n      this.NoHorarios = true;\n      if (Array.isArray(this.Especialidad) && this.Especialidad.length > 0) {\n        this.NoEspecialidades = true;\n      } else {\n        alert(\"Aún no cuentas con especialidades, recuerda usar el menú de especialidades para completar tu información\");\n      }\n    } else {\n      this.EnvioEspecialidad = false;\n      alert(\"pon horarios y especialidades para desbloquear todos los menús, cierra sesión y vuelve a logear cuando hayas completado la información\");\n    }\n  }\n  PrimerInicio() {\n    if (this.NoHorarios && this.NoEspecialidades) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nHomeMedicoComponent = __decorate([Component({\n  selector: 'app-home-medico',\n  templateUrl: './home-medico.component.html',\n  styleUrls: ['./home-medico.component.css']\n})], HomeMedicoComponent);\nexport { HomeMedicoComponent };","map":{"version":3,"mappings":"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","names":["Component","HomeMedicoComponent","constructor","http","UserService","obtenerDatos","parametro","options","params","miParametro","get","url","ngOnInit","getHistorialPaciente","subscribe","consultas","Horario","getEspecialidadesAgregadas","especialidadesAgregadas","Especialidad","ComprobarPrimerInicio","getId","abrirFormularioEspecialidad","cerrarFormularios","mostrarFormularioEspecialidad","abrirFormularioHorario","mostrarFormularioHorario","abrirFormularioConsulta","mostrarFormularioConsulta","abrirFormularioHistorialMedico","mostrarFormularioHistorialMedico","abrirMenuReportes","mostrarMenuReportes","EnvioEspecialidad","Array","isArray","length","NoHorarios","NoEspecialidades","alert","PrimerInicio","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\home-medico.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../../../Services/user';\n@Component({\n  selector: 'app-home-medico',\n  templateUrl: './home-medico.component.html',\n  styleUrls: ['./home-medico.component.css']\n})\nexport class HomeMedicoComponent {\n  private url = 'http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico';\n  protected NoHorarios=false;\n  protected NoEspecialidades=false;\n  protected Horario: any[] = [];\n  protected Especialidad: any[] = [];\n  protected EnvioEspecialidad = true;\n  mostrarFormularioEspecialidad = false;\n  mostrarFormularioHorario = false;\n  mostrarFormularioConsulta = false;\n  mostrarFormularioHistorialMedico = false;\n  mostrarMenuReportes = false;\n  constructor(private http: HttpClient, private UserService: UserService) { }\n\n  obtenerDatos(parametro: any): Observable<any> {\n    const options = {\n      params: {\n        miParametro: parametro\n      }\n    };\n    return this.http.get<any>(this.url, options);\n  }\n\n  ngOnInit() {\n    this.getHistorialPaciente().subscribe(consultas => {\n      this.Horario = consultas;\n      this.getEspecialidadesAgregadas().subscribe(especialidadesAgregadas => {\n        this.Especialidad = especialidadesAgregadas;\n        this.ComprobarPrimerInicio()\n      })\n    });\n  }\n    //metodo get las consultas para el historial\n    getHistorialPaciente(){\n      const url = 'http://localhost:8080/Proyecto2Clinica/ControladorHorario?accion=obtenerHorarioId&id='+this.UserService.getId();\n      return this.http.get<any[]>(url);\n    }\n    getEspecialidadesAgregadas() {\n      const url = 'http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=obtenerEspecialidadesAgregadasMedicos&IdMedico='+this.UserService.getId();\n      return this.http.get<any[]>(url);\n    }\n\n  abrirFormularioEspecialidad() { this.cerrarFormularios(); this.mostrarFormularioEspecialidad = true;}\n  abrirFormularioHorario() {this.cerrarFormularios(); this.mostrarFormularioHorario = true;}\n  abrirFormularioConsulta() {this.cerrarFormularios(); this.mostrarFormularioConsulta = true;}\n  abrirFormularioHistorialMedico() {this.cerrarFormularios(); this.mostrarFormularioHistorialMedico = true;}\n  abrirMenuReportes() {this.cerrarFormularios(); this.mostrarMenuReportes = true;}\n  cerrarFormularios(){\n    this.mostrarFormularioEspecialidad = false;\n    this.mostrarFormularioHorario = false;\n    this.mostrarFormularioConsulta = false;\n    this.mostrarFormularioHistorialMedico = false;\n    this.mostrarMenuReportes = false;\n    this.EnvioEspecialidad = false;\n  }\n\n  ComprobarPrimerInicio(){\n    if (Array.isArray(this.Horario) && this.Horario.length > 0) {\n        this.NoHorarios = true;\n      if (Array.isArray(this.Especialidad) && this.Especialidad.length > 0) {\n        this.NoEspecialidades = true;\n      } else {\n       alert(\"Aún no cuentas con especialidades, recuerda usar el menú de especialidades para completar tu información\");\n      }\n    } else {\n      this.EnvioEspecialidad = false;\n      alert(\"pon horarios y especialidades para desbloquear todos los menús, cierra sesión y vuelve a logear cuando hayas completado la información\");\n    }\n  }\n  PrimerInicio():boolean{\n    if(this.NoHorarios&&this.NoEspecialidades){\n      return true;\n    }else{\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}