{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../../../Services/user\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_ng_container_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r5 = i0.ɵɵnextContext().index;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r6.examenes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.examenes[i_r5 + 1]);\n  }\n}\nfunction ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_ng_container_10_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r5 % 3 === 0);\n  }\n}\nfunction ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8);\n  }\n}\nfunction ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.Finalizar());\n    });\n    i0.ɵɵtext(1, \"Finalizar\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h4\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n    i0.ɵɵtext(8, \"Selecione un examen para agregar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"select\", 7);\n    i0.ɵɵlistener(\"ngModelChange\", function ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_Template_select_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.selectedOption = $event);\n    });\n    i0.ɵɵtemplate(10, ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_ng_container_10_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.AgregarExamenSeleccionado());\n    });\n    i0.ɵɵtext(12, \"Agregar Examen seleccionado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"table\")(14, \"thead\")(15, \"tr\")(16, \"th\");\n    i0.ɵɵtext(17, \"Examenes Agregados:\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"tbody\");\n    i0.ɵɵtemplate(19, ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_tr_19_Template, 3, 1, \"tr\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 10);\n    i0.ɵɵtemplate(21, ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_button_21_Template, 2, 0, \"button\", 11);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" Agregar Examenes a la Solicitud a: \", ctx_r0.datos.Nombre, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.examenes);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ExamenesAgregados);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.proteccionExamen);\n  }\n}\nexport class ModalAgregarExamenesSolicitudPacientesComponent {\n  constructor(http, UserService) {\n    this.http = http;\n    this.UserService = UserService;\n    this.cerrado = new EventEmitter();\n    this.IdSolicitud = \"\";\n    this.proteccionExamen = false;\n    this.chow = false;\n    this.MensajeDeConfirmacion = false;\n  }\n  ngOnInit() {}\n  Mostrar(datos) {\n    this.datos = datos;\n    this.chow = true;\n    this.subscribirse();\n    this.CrearSolicitudIncompleta();\n  }\n  subscribirse() {\n    this.getExamenes().subscribe(examen => {\n      this.examenes = examen;\n      console.log(examen);\n    });\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesLaboratorios?accion=obtenerExamenesDelLabParaSolicitud&IdLab=' + this.datos.Id;\n    return this.http.get(url);\n  }\n  getExamenesAgregados() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&id=' + this.datos.IdConsultas;\n    return this.http.get(url);\n  }\n  //Crear la solicitud incompleta:\n  CrearSolicitudIncompleta() {\n    const Idlab = this.datos.Id;\n    const idUsuario = this.UserService.getId();\n    const body = {\n      Idlab: this.datos.Id\n    };\n    const url = `http://localhost:8080/Proyecto2Clinica/ControladorSolicitudes?accion=CrearSolicitud&Estado=INCOMPLETO&Idlab=${Idlab}&idUsuario=${idUsuario}`;\n    this.http.post(url, this.datos, {\n      responseType: 'text'\n    }).subscribe(respuesta => {\n      this.IdSolicitud = respuesta;\n      console.log(respuesta);\n    });\n  }\n  AgregarExamenSeleccionado() {\n    const nombre = this.selectedOption;\n    const body = {\n      Nombre: this.selectedOption\n    };\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=CrearExamenAsignado&NombreExamen=${nombre}&IdConsulta=${this.datos.IdConsultas}`, body).subscribe(response => {\n      alert('Se agrego el examen a la consulta');\n      this.subscribirse();\n      // Actualizar la lista de especialidades agregadas\n    }, error => {\n      if (error.status === 400) {\n        alert('No se encontro el examen pedido');\n      } else if (error.status === 409) {\n        alert('No puedes agregar el mismo examen dos veces ');\n      }\n    });\n  }\n  EliminarExamenesSolicitados(e) {\n    this.http.delete('http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&Nombre=' + e + '&IdConsulta=' + this.datos.IdConsultas).subscribe(response => {\n      alert('Se elimino el examen de la consulta con exito');\n    }, error => {\n      this.subscribirse();\n      alert('Se elimino el examen de la consulta con exito');\n    });\n  }\n  Finalizar() {\n    if (this.MensajeDeConfirmacion) {\n      this.chow = false;\n      const idConsulta = this.datos.IdConsultas;\n      const body = {\n        idConsulta: idConsulta\n      };\n      this.http.put(`http://localhost:8080/Proyecto2Clinica/ControladorConsultas?accion=ActualizarConsulta&IdConsulta=${idConsulta}&Estado=EXAMEN_PENDIENTE`, body).subscribe(response => {\n        alert('Se cambio la consulta a estado examen pendiente');\n        this.cerrado.emit();\n      }, error => {\n        if (error.status === 400) {\n          alert('Error al actualizar la consulta');\n        } else {\n          alert('Error al actualizar');\n        }\n      });\n    } else {\n      alert(\"Recuerda que luego no podras agregar más examenes a la consulta, si ya acabaste presiona finalizar otra vez\");\n      this.MensajeDeConfirmacion = true;\n    }\n  }\n}\nModalAgregarExamenesSolicitudPacientesComponent.ɵfac = function ModalAgregarExamenesSolicitudPacientesComponent_Factory(t) {\n  return new (t || ModalAgregarExamenesSolicitudPacientesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.UserService));\n};\nModalAgregarExamenesSolicitudPacientesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ModalAgregarExamenesSolicitudPacientesComponent,\n  selectors: [[\"app-modal-agregar-examenes-solicitud-pacientes\"]],\n  outputs: {\n    cerrado: \"cerrado\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"modalC\"], [1, \"modalC-content\"], [1, \"modalc-header\"], [1, \"modalc-title\"], [1, \"modalC-container\"], [\"for\", \"especialidad\"], [\"name\", \"selectedOption\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"botones\"], [3, \"click\", 4, \"ngIf\"], [3, \"value\"]],\n  template: function ModalAgregarExamenesSolicitudPacientesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ModalAgregarExamenesSolicitudPacientesComponent_ng_container_0_Template, 22, 5, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.chow);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\".modalC[_ngcontent-%COMP%] {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left:0;\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    padding: 16px;\\r\\n    background: rgba(0, 0, 0, 0.75);\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    overflow-y: auto;\\r\\n    z-index: 200;\\r\\n  }\\r\\n.modalC-content[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n  max-width: 500px;\\r\\n}\\r\\n.modalc-header[_ngcontent-%COMP%] {\\r\\n  height: 93px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n  padding: 0 32px;\\r\\n  background-color:#eccb8f;\\r\\n  background-image: radial-gradient(circle at center center,#e6e6e6,#ffffff) repeating-radial-gradient((circle at center center, #e6e6e6 ,#e6e6e6,20px,transparent 40px,transparent 20px));\\r\\n  background-blend-mode: multiply;\\r\\n  background-Size: cover;\\r\\n  background-position:center;\\r\\n  border-radius: 4px 4px 0 0;\\r\\n}\\r\\nselect[_ngcontent-%COMP%]{\\r\\n  padding: 10px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 100%;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 5px;\\r\\n  border: 2px solid black;\\r\\n}\\r\\n  svg[_ngcontent-%COMP%]{\\r\\n    height:45px;\\r\\n    width: 45px;\\r\\n  }\\r\\n  svg[_ngcontent-%COMP%]:hover {\\r\\n    cursor: pointer;\\r\\n    opacity: 0.75;\\r\\n}\\r\\n.modalc-title[_ngcontent-%COMP%]{\\r\\n  font-size: 24px;\\r\\n  font-weight: 600;\\r\\n  color: black;\\r\\n}\\r\\n.modalC-container[_ngcontent-%COMP%]{\\r\\n  padding: 32px;\\r\\n  background: #fff;\\r\\n  border-radius: 0 0 4px 4px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.botones[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  justify-content:space-between;\\r\\n  align-items: center;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 10px 20px;\\r\\n  border: none;\\r\\n  border-radius: 5px;\\r\\n  color: #000000;\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s ease;\\r\\n  background-color: rgb(246, 255, 123);\\r\\n  border: 2px solid black;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover{\\r\\n  background-color: rgb(156, 160, 88);\\r\\n}\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  border-collapse: collapse;\\r\\n  width: 100%;\\r\\n  margin-bottom: 20px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  padding: 12px;\\r\\n  text-align: left;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%] {\\r\\n  background-color: #f2f2f2;\\r\\n  font-weight: bold;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50ZXMvaG9tZS1wYWNpZW50ZS9tZW51LXNvbGljaXR1ZGVzLWV4YW1lbmVzL21vZGFsLWFncmVnYXItZXhhbWVuZXMtc29saWNpdHVkLXBhY2llbnRlcy9tb2RhbC1hZ3JlZ2FyLWV4YW1lbmVzLXNvbGljaXR1ZC1wYWNpZW50ZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixNQUFNO0lBQ04sTUFBTTtJQUNOLFdBQVc7SUFDWCxhQUFhO0lBQ2IsYUFBYTtJQUNiLCtCQUErQjtJQUMvQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsWUFBWTtFQUNkO0FBQ0Y7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEI7RUFDOUIsZUFBZTtFQUNmLHdCQUF3QjtFQUN4Qix3TEFBd0w7RUFDeEwsK0JBQStCO0VBQy9CLHNCQUFzQjtFQUN0QiwwQkFBMEI7RUFDMUIsMEJBQTBCO0FBQzVCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLHVCQUF1QjtBQUN6QjtFQUNFO0lBQ0UsV0FBVztJQUNYLFdBQVc7RUFDYjtFQUNBO0lBQ0UsZUFBZTtJQUNmLGFBQWE7QUFDakI7QUFDQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQixhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsV0FBVztFQUNYLFlBQVk7RUFDWiw2QkFBNkI7RUFDN0IsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixvQ0FBb0M7RUFDcEMsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSxtQ0FBbUM7QUFDckM7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWxDIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6MDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIHBhZGRpbmc6IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNzUpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICB6LWluZGV4OiAyMDA7XHJcbiAgfVxyXG4ubW9kYWxDLWNvbnRlbnR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxufVxyXG4ubW9kYWxjLWhlYWRlciB7XHJcbiAgaGVpZ2h0OiA5M3B4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgcGFkZGluZzogMCAzMnB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6I2VjY2I4ZjtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IGNlbnRlciBjZW50ZXIsI2U2ZTZlNiwjZmZmZmZmKSByZXBlYXRpbmctcmFkaWFsLWdyYWRpZW50KChjaXJjbGUgYXQgY2VudGVyIGNlbnRlciwgI2U2ZTZlNiAsI2U2ZTZlNiwyMHB4LHRyYW5zcGFyZW50IDQwcHgsdHJhbnNwYXJlbnQgMjBweCkpO1xyXG4gIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XHJcbiAgYmFja2dyb3VuZC1TaXplOiBjb3ZlcjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDtcclxufVxyXG5zZWxlY3R7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG59XHJcbiAgc3Zne1xyXG4gICAgaGVpZ2h0OjQ1cHg7XHJcbiAgICB3aWR0aDogNDVweDtcclxuICB9XHJcbiAgc3ZnOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG9wYWNpdHk6IDAuNzU7XHJcbn1cclxuLm1vZGFsYy10aXRsZXtcclxuICBmb250LXNpemU6IDI0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuLm1vZGFsQy1jb250YWluZXJ7XHJcbiAgcGFkZGluZzogMzJweDtcclxuICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDAgMCA0cHggNHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4uYm90b25lc3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbmJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgY29sb3I6ICMwMDAwMDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NiwgMjU1LCAxMjMpO1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG59XHJcbmJ1dHRvbjpob3ZlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU2LCAxNjAsIDg4KTtcclxufVxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxudGgsIHRkIHtcclxuICBwYWRkaW5nOiAxMnB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XHJcbn1cclxuXHJcbnRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","ModalAgregarExamenesSolicitudPacientesComponent","constructor","http","UserService","ngOnInit","Mostrar","datos","chow","subscribirse","CrearSolicitudIncompleta","getExamenes","subscribe","examen","examenes","console","log","url","Id","get","getExamenesAgregados","IdConsultas","Idlab","idUsuario","getId","body","post","responseType","respuesta","IdSolicitud","AgregarExamenSeleccionado","nombre","selectedOption","Nombre","response","alert","error","status","EliminarExamenesSolicitados","e","delete","Finalizar","MensajeDeConfirmacion","idConsulta","put","cerrado","emit","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-paciente\\menu-solicitudes-examenes\\modal-agregar-examenes-solicitud-pacientes\\modal-agregar-examenes-solicitud-pacientes.component.ts","C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-paciente\\menu-solicitudes-examenes\\modal-agregar-examenes-solicitud-pacientes\\modal-agregar-examenes-solicitud-pacientes.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../../../../../Services/user';\n@Component({\n  selector: 'app-modal-agregar-examenes-solicitud-pacientes',\n  templateUrl: './modal-agregar-examenes-solicitud-pacientes.component.html',\n  styleUrls: ['./modal-agregar-examenes-solicitud-pacientes.component.css']\n})\nexport class ModalAgregarExamenesSolicitudPacientesComponent {\n  @Output() cerrado = new EventEmitter();\n  datos: any;\n  protected IdSolicitud: string = \"\";\n  protected proteccionExamen = false;\n  public chow = false;\n  examenes: any;\n  public selectedOption: any;\n  ExamenesAgregados: any;\n  MensajeDeConfirmacion = false;\n  constructor(private http: HttpClient, private UserService:UserService  ) { }\n  ngOnInit() : void  {\n\n  }\n  Mostrar(datos: any){\n    this.datos = datos;\n    this.chow = true;\n    this.subscribirse();\n    this.CrearSolicitudIncompleta();\n  }\n  subscribirse(){\n    this.getExamenes().subscribe(examen => {\n      this.examenes = examen;\n      console.log(examen);\n    });\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesLaboratorios?accion=obtenerExamenesDelLabParaSolicitud&IdLab='+this.datos.Id;\n    return this.http.get<any[]>(url);\n  }\n  getExamenesAgregados(){\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&id='+this.datos.IdConsultas;\n    return this.http.get<any[]>(url);\n  }\n  //Crear la solicitud incompleta:\n  CrearSolicitudIncompleta(){\n    const Idlab = this.datos.Id;\n    const idUsuario = this.UserService.getId();\n    const body = {Idlab : this.datos.Id};\n    const url = `http://localhost:8080/Proyecto2Clinica/ControladorSolicitudes?accion=CrearSolicitud&Estado=INCOMPLETO&Idlab=${Idlab}&idUsuario=${idUsuario}`;\n    this.http.post(url, this.datos, {responseType: 'text'}).subscribe((respuesta: string) => {\n      this.IdSolicitud = respuesta;\n      console.log(respuesta);\n    });\n  }\n  AgregarExamenSeleccionado(){\n    const nombre = this.selectedOption;\n    const body = {Nombre: this.selectedOption};\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=CrearExamenAsignado&NombreExamen=${nombre}&IdConsulta=${this.datos.IdConsultas}`, body).subscribe(\n      response => {\n        alert('Se agrego el examen a la consulta');\n        this.subscribirse();\n        // Actualizar la lista de especialidades agregadas\n      },\n      error => {\n        if (error.status === 400) {\n          alert('No se encontro el examen pedido');\n        } else if(error.status === 409) {\n          alert('No puedes agregar el mismo examen dos veces ');\n        }\n      }\n    );\n  }\n  EliminarExamenesSolicitados(e: any){\n    this.http.delete('http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&Nombre='+e+'&IdConsulta='+this.datos.IdConsultas).subscribe(\n      (response) => {\n        alert('Se elimino el examen de la consulta con exito');\n      },\n      (error) => {\n        this.subscribirse();\n        alert('Se elimino el examen de la consulta con exito');\n      }\n    );\n  }\n  Finalizar(){\n    if(this.MensajeDeConfirmacion){\n      this.chow = false;\n      \n      const idConsulta = this.datos.IdConsultas;\n      const body = { idConsulta: idConsulta };\n      this.http.put(`http://localhost:8080/Proyecto2Clinica/ControladorConsultas?accion=ActualizarConsulta&IdConsulta=${idConsulta}&Estado=EXAMEN_PENDIENTE`, body).subscribe(\n        response => {\n          alert('Se cambio la consulta a estado examen pendiente');\n          this.cerrado.emit();\n        },\n        error => {\n          if (error.status === 400) {\n            alert('Error al actualizar la consulta');\n          } else {\n            alert('Error al actualizar');\n          }\n        }\n      );\n    }else{\n      alert(\"Recuerda que luego no podras agregar más examenes a la consulta, si ya acabaste presiona finalizar otra vez\");\n      this.MensajeDeConfirmacion = true;\n    }\n  }\n}\n\n","<ng-container *ngIf=\"chow\">\n    <div class=\"modalC\">\n        <div class=\"modalC-content\">\n            <div class=\"modalc-header\">\n                <h4 class=\"modalc-title\">\n                    Agregar Examenes a la Solicitud a: {{ datos.Nombre }}\n                </h4>\n            </div>\n            <!-- Cuerpo  -->\n                <div class=\"modalC-container\"> \n                    <label for=\"especialidad\">Selecione un examen para agregar</label>\n                    <select name=\"selectedOption\" [(ngModel)]=\"selectedOption\">\n                    <ng-container *ngFor=\"let dato of examenes; let i = index;\">\n                        <ng-container *ngIf=\"i % 3 === 0\">\n                        <option  [value]=\"examenes\">{{examenes[i+1]}}</option>\n                        </ng-container>\n                    </ng-container>\n                    </select>\n                    <button (click)=\" AgregarExamenSeleccionado()\">Agregar Examen seleccionado</button>\n                    <table>\n                        <thead>\n                          <tr>\n                            <th>Examenes Agregados:</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr *ngFor=\"let item of ExamenesAgregados\">\n                            <td>{{ item }}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    <div class=\"botones\">\n                        <button *ngIf=\"proteccionExamen\" (click)=\"Finalizar()\">Finalizar</button>\n                    </div>\n                </div>\n            </div>\n        </div>          \n</ng-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}