{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../Services/user\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction MenuReportesComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8)(2, \"h2\");\n    i0.ɵɵtext(3, \"Saldo actual del Laboratorio:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Q \", ctx_r0.saldoMedico, \"\");\n  }\n}\nfunction MenuReportesComponent_ng_container_19_th_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Nombre Del Paciente:\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MenuReportesComponent_ng_container_19_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Nombre Del Exmamen:\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MenuReportesComponent_ng_container_19_ng_container_11_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const j_r10 = ctx.index;\n    const i_r6 = i0.ɵɵnextContext(2).index;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.InfoPacientes[i_r6 + j_r10]);\n  }\n}\nconst _c0 = function () {\n  return [0, 1, 2];\n};\nfunction MenuReportesComponent_ng_container_19_ng_container_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\");\n    i0.ɵɵtemplate(2, MenuReportesComponent_ng_container_19_ng_container_11_ng_container_1_ng_container_2_Template, 3, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nfunction MenuReportesComponent_ng_container_19_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuReportesComponent_ng_container_19_ng_container_11_ng_container_1_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r6 % 3 === 0);\n  }\n}\nfunction MenuReportesComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\")(2, \"thead\")(3, \"tr\");\n    i0.ɵɵtemplate(4, MenuReportesComponent_ng_container_19_th_4_Template, 2, 0, \"th\", 7);\n    i0.ɵɵtemplate(5, MenuReportesComponent_ng_container_19_th_5_Template, 2, 0, \"th\", 7);\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"cantidad de Examenes hechos:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Total de ingreso al medico:\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, MenuReportesComponent_ng_container_19_ng_container_11_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mostrarPacientes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mostrarEspecialidades);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.InfoPacientes);\n  }\n}\nexport class MenuReportesComponent {\n  constructor(http, UserService) {\n    this.http = http;\n    this.UserService = UserService;\n    this.mostrarSaldo = false;\n    this.mostrarPacientes = false;\n    this.mostrarEspecialidades = false;\n    this.mostrar = false;\n    this.Accion = \"\";\n    this.fechas = false;\n    this.InfoPacientes = [];\n    this.InfoEspecialidades = [];\n  }\n  ngOnInit() {\n    this.getSaldo().subscribe(consultas => {\n      this.saldoMedico = consultas;\n    });\n  }\n  //metodo que maneja los botones:\n  MostrarSaldo() {\n    this.mostrarSaldo = true;\n    this.mostrarPacientes = false;\n    this.mostrarEspecialidades = false;\n    this.mostrar = false;\n  }\n  //Metodo que activa el mostrar por paciente:\n  activarPacientes() {\n    this.Accion = \"topPacientesLabs\";\n    this.mostrarPacientes = true;\n    this.mostrarEspecialidades = false;\n    this.MostrarTop();\n  }\n  //metodo que activa el mostrar por Examen:\n  activarExamen() {\n    this.Accion = \"topExamenesLabs\";\n    this.mostrarPacientes = false;\n    this.mostrarEspecialidades = true;\n    this.MostrarTop();\n  }\n  MostrarTop() {\n    if (this.fechaInicial === undefined || this.fechaFinal === undefined) {\n      alert(\"Ingrese fechas validas en los campos\");\n    } else {\n      const fechaInicial = new Date(this.fechaInicial);\n      const fechaFinal = new Date(this.fechaFinal);\n      if (fechaInicial.getTime() < fechaFinal.getTime()) {\n        this.getTops().subscribe(pacientes => {\n          this.InfoPacientes = pacientes;\n          this.mostrar = true;\n          this.mostrarSaldo = false;\n        });\n      } else {\n        alert(\"la fecha de inicio no puede ser después de la fecha final\");\n      }\n    }\n  }\n  //metodos encargados de buscar el saldo al servlet:\n  getSaldo() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/Usuario?accion=obtenerSaldo&IdMedico=' + this.UserService.getId();\n    return this.http.get(url);\n  }\n  //metodos encargados de buscar el top 5 en el server:\n  getTops() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorDeReportes?accion=' + this.Accion + '&IdLab=' + this.UserService.getId() + '&FInicio=' + this.fechaInicial + '&FechaFinal=' + this.fechaFinal;\n    return this.http.get(url);\n  }\n  //metodo para comprara las fechas:\n  comprobarFechas(FechaInicio, FechaFinal) {\n    return FechaInicio.getTime() < FechaFinal.getTime();\n  }\n}\nMenuReportesComponent.ɵfac = function MenuReportesComponent_Factory(t) {\n  return new (t || MenuReportesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.UserService));\n};\nMenuReportesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MenuReportesComponent,\n  selectors: [[\"app-menu-reportes\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[\"id\", \"divArriba\"], [\"type\", \"button\", 3, \"click\"], [1, \"divFecha\"], [1, \"divInterno\"], [\"for\", \"fecha\"], [\"type\", \"date\", \"id\", \"fecha\", 3, \"ngModel\", \"ngModelChange\"], [1, \"divCuerpo\"], [4, \"ngIf\"], [1, \"divSaldo\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function MenuReportesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function MenuReportesComponent_Template_button_click_2_listener() {\n        return ctx.MostrarSaldo();\n      });\n      i0.ɵɵtext(3, \"Saldo del Laboratorio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function MenuReportesComponent_Template_button_click_4_listener() {\n        return ctx.activarPacientes();\n      });\n      i0.ɵɵtext(5, \"Top pacientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function MenuReportesComponent_Template_button_click_6_listener() {\n        return ctx.activarExamen();\n      });\n      i0.ɵɵtext(7, \"Top Examenes\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3)(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Fecha Inicial:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function MenuReportesComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.fechaInicial = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 4);\n      i0.ɵɵtext(15, \"Fecha final:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function MenuReportesComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.fechaFinal = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵtemplate(18, MenuReportesComponent_ng_container_18_Template, 6, 1, \"ng-container\", 7);\n      i0.ɵɵtemplate(19, MenuReportesComponent_ng_container_19_Template, 12, 3, \"ng-container\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.fechaInicial);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.fechaFinal);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.mostrarSaldo);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mostrar);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"a[_ngcontent-%COMP%]{\\r\\n    text-decoration: none;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    font-size: xx-large;\\r\\n}\\r\\ndiv[_ngcontent-%COMP%]{\\r\\n    background-color: #fdcc8df4;\\r\\n    border: 2px solid black;\\r\\n}\\r\\n#divArriba[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    width: 500px;\\r\\n    height: 100px;\\r\\n}\\r\\n.divFecha[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    flex-direction: row;\\r\\n}\\r\\n.divInterno[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n.divSaldo[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    width: 100%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    flex-direction: column;\\r\\n    background-color: #ffecd3f4;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    color: #000000;\\r\\n    cursor: pointer;\\r\\n    transition: all 0.3s ease;\\r\\n    background-color: rgb(246, 255, 123);\\r\\n    border: 2px solid black;\\r\\n  }\\r\\n  button[_ngcontent-%COMP%]:hover{\\r\\n    background-color: rgb(156, 160, 88);\\r\\n  }\\r\\n  table[_ngcontent-%COMP%] {\\r\\n    border-collapse: collapse;\\r\\n    width: 100%;\\r\\n    margin-bottom: 20px;\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    padding: 12px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%] {\\r\\n    background-color: #f2f2f2;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  td[_ngcontent-%COMP%]{\\r\\n    background-color: #ffecd3f4;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVudS1yZXBvcnRlcy9tZW51LXJlcG9ydGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksMkJBQTJCO0lBQzNCLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw4QkFBOEI7SUFDOUIsWUFBWTtJQUNaLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7SUFDYixXQUFXO0lBQ1gsOEJBQThCO0lBQzlCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxhQUFhO0lBQ2IsV0FBVztJQUNYLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7SUFDWCx1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsMkJBQTJCO0FBQy9CO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixvQ0FBb0M7SUFDcEMsdUJBQXVCO0VBQ3pCO0VBQ0E7SUFDRSxtQ0FBbUM7RUFDckM7RUFDQTtJQUNFLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLDZCQUE2QjtFQUMvQjs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLDJCQUEyQjtFQUM3QiIsInNvdXJjZXNDb250ZW50IjpbImF7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxubGFiZWx7XHJcbiAgICBmb250LXNpemU6IHh4LWxhcmdlO1xyXG59XHJcbmRpdntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZGNjOGRmNDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG59XHJcbiNkaXZBcnJpYmF7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIHdpZHRoOiA1MDBweDtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbn1cclxuLmRpdkZlY2hhe1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbn1cclxuLmRpdkludGVybm97XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbi5kaXZTYWxkb3tcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlY2QzZjQ7XHJcbn1cclxuYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDYsIDI1NSwgMTIzKTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gIH1cclxuICBidXR0b246aG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTU2LCAxNjAsIDg4KTtcclxuICB9XHJcbiAgdGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICB9XHJcbiAgXHJcbiAgdGgsIHRkIHtcclxuICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XHJcbiAgfVxyXG4gIFxyXG4gIHRoIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgdGR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlY2QzZjQ7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MenuReportesComponent","constructor","http","UserService","ngOnInit","getSaldo","subscribe","consultas","saldoMedico","MostrarSaldo","mostrarSaldo","mostrarPacientes","mostrarEspecialidades","mostrar","activarPacientes","Accion","MostrarTop","activarExamen","fechaInicial","undefined","fechaFinal","alert","Date","getTime","getTops","pacientes","InfoPacientes","url","getId","get","comprobarFechas","FechaInicio","FechaFinal","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\menu-reportes\\menu-reportes.component.html","C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\menu-reportes\\menu-reportes.component.ts"],"sourcesContent":["<div>\n    <div id=\"divArriba\">\n      <button type=\"button\" (click)=\"MostrarSaldo()\">Saldo del Laboratorio</button>\n      <button type=\"button\" (click)=\"activarPacientes()\">Top pacientes</button>\n      <button type=\"button\" (click)=\"activarExamen()\">Top Examenes</button>\n    </div>\n    <div class=\"divFecha\">\n        <div class=\"divInterno\">\n            <label for=\"fecha\">Fecha Inicial:</label>\n            <input type=\"date\" id=\"fecha\" [(ngModel)]=\"fechaInicial\">\n        </div>\n        <div class=\"divInterno\">\n            <label for=\"fecha\">Fecha final:</label>\n            <input type=\"date\" id=\"fecha\" [(ngModel)]=\"fechaFinal\">\n        </div>\n    </div>\n   \n    <div class=\"divCuerpo\">\n        <ng-container *ngIf=\"mostrarSaldo\">\n            <div class=\"divSaldo\">\n                <h2>Saldo actual del Laboratorio:</h2>\n                <label>Q {{saldoMedico}}</label>\n            </div>\n        </ng-container>\n        <!-- tabla de top 5 pacientes -->\n        <ng-container *ngIf=\"mostrar\">\n            <table>\n                <thead>\n                  <tr>\n                    <th *ngIf=\"mostrarPacientes\">Nombre Del Paciente:</th>\n                    <th *ngIf=\"mostrarEspecialidades\">Nombre Del Exmamen:</th>\n                    <th>cantidad de Examenes hechos:</th>\n                    <th>Total de ingreso al medico:</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <ng-container *ngFor=\"let dato of InfoPacientes; let i = index;\">\n                    <ng-container *ngIf=\"i % 3 === 0\">\n                      <tr>\n                        <ng-container *ngFor=\"let columna of [0, 1, 2]; let j = index;\">\n                          <td>{{ InfoPacientes[i+j] }}</td>\n                        </ng-container>\n                      </tr>\n                    </ng-container>\n                  </ng-container>\n                </tbody>\n              </table>\n        </ng-container>\n\n    </div>  \n  </div>\n  ","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../../Services/user';\n\n@Component({\n  selector: 'app-menu-reportes',\n  templateUrl: './menu-reportes.component.html',\n  styleUrls: ['./menu-reportes.component.css']\n})\nexport class MenuReportesComponent {\n  fechaInicial:Date | undefined;\n  fechaFinal:Date | undefined;\n  saldoMedico: any;\n  mostrarSaldo = false;\n  mostrarPacientes = false;\n  mostrarEspecialidades = false;\n  mostrar = false;\n  Accion:String =\"\";\n  fechas=false;\n  InfoPacientes: any[] = [];\n  InfoEspecialidades: any[] = [];\n  constructor(private http: HttpClient , private UserService: UserService) { }\n  \n  ngOnInit() {\n    this.getSaldo().subscribe(consultas => {\n      this.saldoMedico = consultas;\n    });\n  }\n  //metodo que maneja los botones:\n    MostrarSaldo(){\n      this.mostrarSaldo = true;\n      this.mostrarPacientes = false;\n      this.mostrarEspecialidades = false;\n      this.mostrar=false;\n    }\n    //Metodo que activa el mostrar por paciente:\n    activarPacientes(){\n      this.Accion=\"topPacientesLabs\";\n      this.mostrarPacientes=true;\n      this.mostrarEspecialidades = false;\n      this.MostrarTop();\n    }\n    //metodo que activa el mostrar por Examen:\n    activarExamen(){\n      this.Accion=\"topExamenesLabs\";\n      this.mostrarPacientes=false;\n      this.mostrarEspecialidades = true;\n      this.MostrarTop();\n    }\n    MostrarTop(){\n      if(this.fechaInicial===undefined||this.fechaFinal===undefined){\n        alert(\"Ingrese fechas validas en los campos\");\n      }else{\n        const fechaInicial = new Date(this.fechaInicial);\n        const fechaFinal = new Date(this.fechaFinal);\n        if(fechaInicial.getTime() < fechaFinal.getTime()){\n              this.getTops().subscribe(pacientes => {\n                this.InfoPacientes = pacientes;\n                this.mostrar = true;\n                this.mostrarSaldo = false;\n              });\n        }else{\n          alert(\"la fecha de inicio no puede ser después de la fecha final\");\n        } \n      }\n    }\n //metodos encargados de buscar el saldo al servlet:\n  getSaldo(){\n    const url = 'http://localhost:8080/Proyecto2Clinica/Usuario?accion=obtenerSaldo&IdMedico='+this.UserService.getId();\n    return this.http.get<any[]>(url);\n  }\n  //metodos encargados de buscar el top 5 en el server:\n  getTops(){\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorDeReportes?accion='+this.Accion+'&IdLab='+this.UserService.getId()+'&FInicio='+this.fechaInicial+'&FechaFinal='+this.fechaFinal;\n    return this.http.get<any[]>(url);\n  }\n  //metodo para comprara las fechas:\n  comprobarFechas(FechaInicio: Date, FechaFinal: Date): boolean {\n    return FechaInicio.getTime() < FechaFinal.getTime();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}