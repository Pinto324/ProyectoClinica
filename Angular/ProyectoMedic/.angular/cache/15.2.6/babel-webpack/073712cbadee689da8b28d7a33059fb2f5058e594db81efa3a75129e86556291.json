{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../../Services/user\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction MedicoMenuEspecialidadesComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const especialidades_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", especialidades_r2.NombreEspecialidad);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(especialidades_r2.NombreEspecialidad);\n  }\n}\nfunction MedicoMenuEspecialidadesComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function MedicoMenuEspecialidadesComponent_tr_29_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const e_r3 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(e_r3.nuevoPrecio = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function MedicoMenuEspecialidadesComponent_tr_29_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const e_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.editarEspecialidad(e_r3, e_r3.nuevoPrecio));\n    });\n    i0.ɵɵtext(10, \"Guardar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const e_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r3.NombreEspecialidad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r3.Precio);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r3.Estado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", e_r3.nuevoPrecio);\n  }\n}\nexport class MedicoMenuEspecialidadesComponent {\n  constructor(http, UserService) {\n    this.http = http;\n    this.UserService = UserService;\n    this.especialidades = [];\n    this.especialidadesAgregadas = [];\n    this.inputValue = 0;\n  }\n  //metodo para conseguir listado de especialidades\n  ngOnInit() {\n    this.getEspecialidades().subscribe(especialidades => {\n      this.especialidades = especialidades;\n    });\n    this.getEspecialidadesAgregadas().subscribe(especialidadesAgregadas => {\n      this.especialidadesAgregadas = especialidadesAgregadas;\n    });\n  }\n  getEspecialidades() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/Especialidades?accion=obtenerEspecialidades';\n    return this.http.get(url);\n  }\n  getEspecialidadesAgregadas() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=obtenerEspecialidadesAgregadas&IdMedico=' + this.UserService.getId();\n    return this.http.get(url);\n  }\n  //Metodo que se encarga de editar el precio de una especialidad\n  editarEspecialidad(especialidad, e) {\n    const idEspecialidad = especialidad.IdEspecialidades;\n    const precio = e;\n    const body = {\n      Precio: precio\n    };\n    this.http.put(`http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=ActualizarPrecio&IdEM=${idEspecialidad}&Precio=${precio}`, body).subscribe(response => {\n      console.log(response);\n      alert('Especialidad editada correctamente.');\n      this.ngOnInit();\n      // Actualizar la lista de especialidades agregadas\n    }, error => {\n      if (error.status === 400) {\n        alert('Error al editar la especialidad: el ID ingresado no es válido.');\n      } else {\n        alert('Error al editar la especialidad');\n      }\n    });\n  }\n  ////////////////////////////////////////////////////////////////\n  //metodo para crear solicitud de especialidades\n  EnviarSolicitudEspecialidad() {\n    const precio = this.inputValue;\n    const nombre = this.selectedOption;\n    const IdMedico = this.UserService.getId();\n    const body = {\n      Precio: precio,\n      Nombre: this.selectedOption\n    };\n    console.log(this.selectedOption, this.inputValue);\n    console.log(body);\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=CrearSolicitud&Nombre=${nombre}&Precio=${precio}&IdMedico=${IdMedico}`, body).subscribe(response => {\n      alert('Solicitud enviada correctamente.');\n      this.ngOnInit();\n      // Actualizar la lista de especialidades agregadas\n    }, error => {\n      if (error.status === 400) {\n        alert('No se encontro la especialidad pedida');\n      } else if (error.status === 409) {\n        alert('No puedes pedir una solicitud de una especialidad con la que ya cuentas o tienes solicitud pendiente');\n      }\n    });\n  }\n}\nMedicoMenuEspecialidadesComponent.ɵfac = function MedicoMenuEspecialidadesComponent_Factory(t) {\n  return new (t || MedicoMenuEspecialidadesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.UserService));\n};\nMedicoMenuEspecialidadesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MedicoMenuEspecialidadesComponent,\n  selectors: [[\"app-medico-menu-especialidades\"]],\n  decls: 30,\n  vars: 4,\n  consts: [[\"id\", \"principal\"], [1, \"form-group\"], [\"for\", \"especialidad\"], [\"name\", \"selectedOption\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"precio\"], [\"type\", \"number\", \"id\", \"precio\", \"min\", \"0\", \"name\", \"inputValue\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"type\", \"number\", 1, \"Edit\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function MedicoMenuEspecialidadesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Enviar solicitud de nueva Especialidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Especialidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function MedicoMenuEspecialidadesComponent_Template_select_ngModelChange_7_listener($event) {\n        return ctx.selectedOption = $event;\n      });\n      i0.ɵɵtemplate(8, MedicoMenuEspecialidadesComponent_option_8_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Precio por consulta:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function MedicoMenuEspecialidadesComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.inputValue = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function MedicoMenuEspecialidadesComponent_Template_button_click_12_listener() {\n        return ctx.EnviarSolicitudEspecialidad();\n      });\n      i0.ɵɵtext(13, \"Agregar Especialidad\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 0)(15, \"h2\");\n      i0.ɵɵtext(16, \"Especialidades Agregadas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"table\")(18, \"thead\")(19, \"tr\")(20, \"th\");\n      i0.ɵɵtext(21, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Precio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Estado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Nuevo Precio | Guardar\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"tbody\");\n      i0.ɵɵtemplate(29, MedicoMenuEspecialidadesComponent_tr_29_Template, 11, 4, \"tr\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.especialidades);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputValue);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.especialidadesAgregadas);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MinValidator, i4.NgModel, i4.NgForm],\n  styles: [\"a[_ngcontent-%COMP%]{\\r\\n    text-decoration: none;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    font-size: xx-large;\\r\\n}\\r\\nselect[_ngcontent-%COMP%]{\\r\\n    padding: 10px;\\r\\n    margin-bottom: 20px;\\r\\n    width: 100%;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n}\\r\\ninput[_ngcontent-%COMP%]{\\r\\n    padding: 5px;\\r\\n    margin-bottom: 10px;\\r\\n    width: 50%;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    border: none;\\r\\n    border-radius: 5px;\\r\\n    color: #000000;\\r\\n    cursor: pointer;\\r\\n    transition: all 0.3s ease;\\r\\n    background-color: rgb(246, 255, 123);\\r\\n  }\\r\\n.form-group[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n    justify-content: space-between;\\r\\n}\\r\\n#principal[_ngcontent-%COMP%]{  \\r\\n    background-color: #fdcc8df4;\\r\\n    border: 5px solid black;\\r\\n}\\r\\n\\r\\n.Edit[_ngcontent-%COMP%]{\\r\\n    padding: 5px;\\r\\n    margin-bottom: 10px;\\r\\n    width: 30%;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n}\\r\\ntable[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    padding: 10px;\\r\\n    text-align: left;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n    border: 2px solid black;\\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n    background-color: #fdcc8df4;\\r\\n  }\\r\\n  tr[_ngcontent-%COMP%]{\\r\\n    background-color: #f5f5f5;\\r\\n  }\\r\\n  tr[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #949393;\\r\\n  }\\r\\n  \\r\\n  #principal[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50ZXMvaG9tZS1tZWRpY28vbWVkaWNvLW1lbnUtZXNwZWNpYWxpZGFkZXMvbWVkaWNvLW1lbnUtZXNwZWNpYWxpZGFkZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixVQUFVO0lBQ1Ysc0JBQXNCO0lBQ3RCLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsb0NBQW9DO0VBQ3RDO0FBQ0Y7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLDhCQUE4QjtBQUNsQztBQUNBO0lBQ0ksMkJBQTJCO0lBQzNCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLHNCQUFzQjtJQUN0QixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQiw2QkFBNkI7SUFDN0IsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLDJCQUEyQjtFQUM3QjtFQUNBO0lBQ0UseUJBQXlCO0VBQzNCO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsa0JBQWtCO0VBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmF7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxubGFiZWx7XHJcbiAgICBmb250LXNpemU6IHh4LWxhcmdlO1xyXG59XHJcbnNlbGVjdHtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbmlucHV0e1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbmJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ2LCAyNTUsIDEyMyk7XHJcbiAgfVxyXG4uZm9ybS1ncm91cHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuI3ByaW5jaXBhbHsgIFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkY2M4ZGY0O1xyXG4gICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7XHJcbn1cclxuXHJcbi5FZGl0e1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcbnRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIHRoLCB0ZCB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgfVxyXG4gIFxyXG4gIHRoIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkY2M4ZGY0O1xyXG4gIH1cclxuICB0cntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XHJcbiAgfVxyXG4gIHRyOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM5NDkzOTM7XHJcbiAgfVxyXG4gIFxyXG4gICNwcmluY2lwYWx7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","MedicoMenuEspecialidadesComponent","constructor","http","UserService","ngOnInit","getEspecialidades","subscribe","especialidades","getEspecialidadesAgregadas","especialidadesAgregadas","url","get","getId","editarEspecialidad","especialidad","e","idEspecialidad","IdEspecialidades","precio","body","Precio","put","response","console","log","alert","error","status","EnviarSolicitudEspecialidad","inputValue","nombre","selectedOption","IdMedico","Nombre","post","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-menu-especialidades\\medico-menu-especialidades.component.html","C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-menu-especialidades\\medico-menu-especialidades.component.ts"],"sourcesContent":["<div id=\"principal\">\n    <h2>Enviar solicitud de nueva Especialidad</h2>\n    <form>\n      <div class=\"form-group\">\n        <label for=\"especialidad\">Especialidad</label>\n        <select name=\"selectedOption\" [(ngModel)]=\"selectedOption\">\n          <option *ngFor=\"let especialidades of especialidades\" [value]=\"especialidades.NombreEspecialidad\">{{especialidades.NombreEspecialidad}}</option>\n        </select>\n        <label for=\"precio\">Precio por consulta:</label>\n        <input type=\"number\" class=\"form-control \" id=\"precio\" min=\"0\" name=\"inputValue\" [(ngModel)]=\"inputValue\">\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"EnviarSolicitudEspecialidad()\">Agregar Especialidad</button>\n      </div>\n    </form>\n</div>\n<div id=\"principal\">\n  <h2>Especialidades Agregadas</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>Nombre</th>\n        <th>Precio</th>\n        <th>Estado</th>\n        <th>Nuevo Precio | Guardar</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of especialidadesAgregadas\">\n        <td>{{ e.NombreEspecialidad }}</td>\n        <td>{{ e.Precio }}</td>\n        <td>{{ e.Estado }}</td>\n        <td><input class=\"Edit\" type=\"number\" [(ngModel)]=\"e.nuevoPrecio\"><button type=\"button\" class=\"btn btn-primary\" (click)=\"editarEspecialidad(e, e.nuevoPrecio)\">Guardar</button></td>\n      </tr>\n    </tbody>\n  </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserService } from '../../../../Services/user';\n@Component({\n  selector: 'app-medico-menu-especialidades',\n  templateUrl: './medico-menu-especialidades.component.html',\n  styleUrls: ['./medico-menu-especialidades.component.css']\n})\nexport class MedicoMenuEspecialidadesComponent implements OnInit { \n  especialidades: any[] = [];\n  especialidadesAgregadas: any[] = [];\n  public selectedOption: any;\n  public inputValue: number = 0;\n  constructor(private http: HttpClient , private UserService: UserService  ) { }\n  //metodo para conseguir listado de especialidades\n\n  ngOnInit() : void  {\n    this.getEspecialidades().subscribe(especialidades => {\n      this.especialidades = especialidades;\n    });\n    this.getEspecialidadesAgregadas().subscribe(especialidadesAgregadas => {\n      this.especialidadesAgregadas = especialidadesAgregadas;\n    })\n  }\n  \n  getEspecialidades() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/Especialidades?accion=obtenerEspecialidades';\n    return this.http.get<any[]>(url);\n  }\n  getEspecialidadesAgregadas() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=obtenerEspecialidadesAgregadas&IdMedico='+this.UserService.getId();\n    return this.http.get<any[]>(url);\n  }\n  //Metodo que se encarga de editar el precio de una especialidad\n  editarEspecialidad(especialidad:any, e : number) {\n   const idEspecialidad = especialidad.IdEspecialidades;\n    const precio = e;\n    const body = { Precio: precio };\n    this.http.put(`http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=ActualizarPrecio&IdEM=${idEspecialidad}&Precio=${precio}`, body).subscribe(\n      response => {\n        console.log(response);\n        alert('Especialidad editada correctamente.');\n        this.ngOnInit();\n        // Actualizar la lista de especialidades agregadas\n      },\n      error => {\n        if (error.status === 400) {\n          alert('Error al editar la especialidad: el ID ingresado no es válido.');\n        } else {\n          alert('Error al editar la especialidad');\n        }\n      }\n    );\n  }\n  ////////////////////////////////////////////////////////////////\n  //metodo para crear solicitud de especialidades\n  EnviarSolicitudEspecialidad(){\n    const precio = this.inputValue;\n    const nombre = this.selectedOption;\n    const IdMedico = this.UserService.getId();\n    const body = { Precio: precio, Nombre: this.selectedOption};\n    console.log(this.selectedOption, this.inputValue);\n    console.log(body);\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/EspecialidadesMedico?accion=CrearSolicitud&Nombre=${nombre}&Precio=${precio}&IdMedico=${IdMedico}`, body).subscribe(\n      response => {\n        alert('Solicitud enviada correctamente.');\n        this.ngOnInit();\n        // Actualizar la lista de especialidades agregadas\n      },\n      error => {\n        if (error.status === 400) {\n          alert('No se encontro la especialidad pedida');\n        } else if(error.status === 409) {\n          alert('No puedes pedir una solicitud de una especialidad con la que ya cuentas o tienes solicitud pendiente');\n        }\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}