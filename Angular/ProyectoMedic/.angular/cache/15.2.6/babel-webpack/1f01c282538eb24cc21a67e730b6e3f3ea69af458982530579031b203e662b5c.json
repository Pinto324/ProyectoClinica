{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ModalInformefinalComponent = class ModalInformefinalComponent {\n  constructor(http, componentCommunicationService) {\n    this.http = http;\n    this.componentCommunicationService = componentCommunicationService;\n    this.mostrar = false;\n    this.Informe = \"\";\n    this.MensajeSeguro = false;\n    this.Acabo = true;\n  }\n  //Metodo que finaliza la consulta:\n  FinalizarConsulta() {\n    if (this.Informe === \"\") {\n      alert(\"Debe de llenar el informe para poder mandarlo\");\n    } else {\n      if (this.MensajeSeguro) {\n        alert(\"Asegurese de que el informe final está correcto, no podrá cambiarlo más tarde, vuelva a presionar el botón para mandarlo\");\n      } else {\n        this.putFinalizar();\n        this.AgregarDineroMedico();\n        this.Acabo = false;\n        this.CerrarModal();\n        this.componentCommunicationService.closeSecondComponent();\n      }\n    }\n  }\n  //metodo put que cambia el estado a finalizado con el informe:\n  putFinalizar() {\n    const IdConsulta = this.datos.IdConsultas;\n    const Informe = this.Informe;\n    const body = {\n      Informe: Informe\n    };\n    this.http.put(`http://localhost:8080/Proyecto2Clinica/ControladorConsultas?accion=FinalizarConsulta&IdConsulta=${IdConsulta}&Informe=${Informe}`, body).subscribe(response => {\n      alert('Consulta finalizada correctamente.');\n    }, error => {\n      if (error.status === 400) {\n        alert('Error al finalizar la consulta, el ID ingresado no es válido.');\n      } else {\n        alert('Error al finalizar la consulta');\n      }\n    });\n  }\n  //metodo para agregar el dinero\n  AgregarDineroMedico() {\n    const Porcentaje = this.datos.Porcentaje;\n    const precio = this.datos.Precio;\n    const IdMedico = this.datos.IdMedico;\n    const IdConsulta = this.datos.IdConsultas;\n    const body = {\n      precio: precio\n    };\n    this.http.put(`http://localhost:8080/Proyecto2Clinica/Usuario?accion=DebitarConsulta&Porcentaje=${Porcentaje}&precio=${precio}&IdMedico=${IdMedico}&IdConsulta=${IdConsulta}`, body).subscribe(response => {\n      alert('Se agrego el dinero de la consulta a su cuenta');\n    }, error => {\n      if (error.status === 400) {\n        alert('Error al agregar el dinero, el ID ingresado no es válido.');\n      } else {\n        alert('Error al agregar el dinero pongase en contacto con soporte tecnico');\n      }\n    });\n  }\n  CerrarModal() {\n    this.mostrar = false;\n  }\n  EncenderModal(datos) {\n    this.datos = datos;\n    this.mostrar = true;\n  }\n};\nModalInformefinalComponent = __decorate([Component({\n  selector: 'app-modal-informefinal',\n  templateUrl: './modal-informefinal.component.html',\n  styleUrls: ['./modal-informefinal.component.css']\n})], ModalInformefinalComponent);\nexport { ModalInformefinalComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAOjCC,YAAoBC,IAAgB,EAASC,6BAA4D;IAArF,SAAI,GAAJD,IAAI;IAAqB,kCAA6B,GAA7BC,6BAA6B;IAN9E,YAAO,GAAG,KAAK;IAEf,YAAO,GAAW,EAAE;IACpB,kBAAa,GAAG,KAAK;IACrB,UAAK,GAAG,IAAI;EAEqG;EAE/G;EACAC,iBAAiB;IACf,IAAG,IAAI,CAACC,OAAO,KAAK,EAAE,EAAC;MACrBC,KAAK,CAAC,+CAA+C,CAAC;KACvD,MAAI;MACH,IAAG,IAAI,CAACC,aAAa,EAAC;QACpBD,KAAK,CAAC,0HAA0H,CAAC;OAClI,MAAI;QACH,IAAI,CAACE,YAAY,EAAE;QACnB,IAAI,CAACC,mBAAmB,EAAE;QAC1B,IAAI,CAACC,KAAK,GAAG,KAAK;QAClB,IAAI,CAACC,WAAW,EAAE;QAClB,IAAI,CAACR,6BAA6B,CAACS,oBAAoB,EAAE;;;EAG/D;EACA;EACAJ,YAAY;IACV,MAAMK,UAAU,GAAG,IAAI,CAACC,KAAK,CAACC,WAAW;IACxC,MAAMV,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMW,IAAI,GAAG;MAAEX,OAAO,EAAEA;IAAO,CAAE;IACjC,IAAI,CAACH,IAAI,CAACe,GAAG,CAAC,mGAAmGJ,UAAU,YAAYR,OAAO,EAAE,EAAEW,IAAI,CAAC,CAACE,SAAS,CAC/JC,QAAQ,IAAG;MACTb,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,EACDc,KAAK,IAAG;MACN,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxBf,KAAK,CAAC,+DAA+D,CAAC;OACvE,MAAM;QACLA,KAAK,CAAC,gCAAgC,CAAC;;IAE3C,CAAC,CACF;EACH;EACA;EACAG,mBAAmB;IAClB,MAAMa,UAAU,GAAG,IAAI,CAACR,KAAK,CAACQ,UAAU;IACvC,MAAMC,MAAM,GAAG,IAAI,CAACT,KAAK,CAACU,MAAM;IAChC,MAAMC,QAAQ,GAAG,IAAI,CAACX,KAAK,CAACW,QAAQ;IACpC,MAAMZ,UAAU,GAAG,IAAI,CAACC,KAAK,CAACC,WAAW;IACzC,MAAMC,IAAI,GAAG;MAAEO,MAAM,EAAEA;IAAM,CAAE;IAC/B,IAAI,CAACrB,IAAI,CAACe,GAAG,CAAC,oFAAoFK,UAAU,WAAWC,MAAM,aAAaE,QAAQ,eAAeZ,UAAU,EAAE,EAAEG,IAAI,CAAC,CAACE,SAAS,CAC5LC,QAAQ,IAAG;MACTb,KAAK,CAAC,gDAAgD,CAAC;IACzD,CAAC,EACDc,KAAK,IAAG;MACN,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxBf,KAAK,CAAC,2DAA2D,CAAC;OACnE,MAAM;QACLA,KAAK,CAAC,oEAAoE,CAAC;;IAE/E,CAAC,CACF;EACH;EACAK,WAAW;IACV,IAAI,CAACe,OAAO,GAAG,KAAK;EACrB;EAEAC,aAAa,CAACb,KAAU;IACvB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACY,OAAO,GAAG,IAAI;EACpB;CACJ;AAvEY1B,0BAA0B,eANtCD,SAAS,CAAC;EACT6B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GAEW9B,0BAA0B,CAuEtC;SAvEYA,0BAA0B","names":["Component","ModalInformefinalComponent","constructor","http","componentCommunicationService","FinalizarConsulta","Informe","alert","MensajeSeguro","putFinalizar","AgregarDineroMedico","Acabo","CerrarModal","closeSecondComponent","IdConsulta","datos","IdConsultas","body","put","subscribe","response","error","status","Porcentaje","precio","Precio","IdMedico","mostrar","EncenderModal","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\src\\main\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-medico\\medico-menu-consultas\\form-consulta\\modal-informefinal\\modal-informefinal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ComponentCommunicationService } from './component-communication.service';\n\n\n@Component({\n  selector: 'app-modal-informefinal',\n  templateUrl: './modal-informefinal.component.html',\n  styleUrls: ['./modal-informefinal.component.css']\n})\n\nexport class ModalInformefinalComponent {\n  mostrar = false;\n  datos : any;\n  Informe: String = \"\";\n  MensajeSeguro = false;\n  Acabo = true;\n  \n      constructor(private http: HttpClient,private componentCommunicationService: ComponentCommunicationService) { }\n\n    //Metodo que finaliza la consulta:\n    FinalizarConsulta(){\n      if(this.Informe === \"\"){\n        alert(\"Debe de llenar el informe para poder mandarlo\");\n      }else{\n        if(this.MensajeSeguro){\n          alert(\"Asegurese de que el informe final está correcto, no podrá cambiarlo más tarde, vuelva a presionar el botón para mandarlo\");\n        }else{\n          this.putFinalizar();\n          this.AgregarDineroMedico();\n          this.Acabo = false;\n          this.CerrarModal();\n          this.componentCommunicationService.closeSecondComponent();\n        }\n      }\n    }\n    //metodo put que cambia el estado a finalizado con el informe:\n    putFinalizar() {\n      const IdConsulta = this.datos.IdConsultas;\n       const Informe = this.Informe;\n       const body = { Informe: Informe };\n       this.http.put(`http://localhost:8080/Proyecto2Clinica/ControladorConsultas?accion=FinalizarConsulta&IdConsulta=${IdConsulta}&Informe=${Informe}`, body).subscribe(\n         response => {\n           alert('Consulta finalizada correctamente.');\n         },\n         error => {\n           if (error.status === 400) {\n             alert('Error al finalizar la consulta, el ID ingresado no es válido.');\n           } else {\n             alert('Error al finalizar la consulta');\n           }\n         }\n       );\n     }\n     //metodo para agregar el dinero\n     AgregarDineroMedico() {\n      const Porcentaje = this.datos.Porcentaje;\n       const precio = this.datos.Precio;\n       const IdMedico = this.datos.IdMedico;\n       const IdConsulta = this.datos.IdConsultas;\n       const body = { precio: precio };\n       this.http.put(`http://localhost:8080/Proyecto2Clinica/Usuario?accion=DebitarConsulta&Porcentaje=${Porcentaje}&precio=${precio}&IdMedico=${IdMedico}&IdConsulta=${IdConsulta}`, body).subscribe(\n         response => {\n           alert('Se agrego el dinero de la consulta a su cuenta');\n         },\n         error => {\n           if (error.status === 400) {\n             alert('Error al agregar el dinero, el ID ingresado no es válido.');\n           } else {\n             alert('Error al agregar el dinero pongase en contacto con soporte tecnico');\n           }\n         }\n       );\n     }\n     CerrarModal(){\n      this.mostrar = false;\n     }\n\n     EncenderModal(datos: any){\n      this.datos = datos;\n      this.mostrar = true;\n     }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}