{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ModalAgregarExamenesSolicitudPacientesComponent {\n  constructor(http) {\n    this.http = http;\n    this.cerrado = new EventEmitter();\n    this.chow = false;\n    this.MensajeDeConfirmacion = false;\n  }\n  ngOnInit() {}\n  Mostrar(datos) {\n    this.datos = datos;\n    this.chow = true;\n    this.subscribirse();\n  }\n  subscribirse() {\n    this.getExamenes().subscribe(examen => {\n      this.examenes = examen;\n    });\n    this.getExamenesAgregados().subscribe(examen => {\n      this.ExamenesAgregados = examen;\n    });\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorTipoDeExamenes?accion=obtenerExamenes';\n    return this.http.get(url);\n  }\n  getExamenesAgregados() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&id=' + this.datos.IdConsultas;\n    return this.http.get(url);\n  }\n  AgregarExamenSeleccionado() {\n    const nombre = this.selectedOption;\n    const body = {\n      Nombre: this.selectedOption\n    };\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=CrearExamenAsignado&NombreExamen=${nombre}&IdConsulta=${this.datos.IdConsultas}`, body).subscribe(response => {\n      alert('Se agrego el examen a la consulta');\n      this.subscribirse();\n      // Actualizar la lista de especialidades agregadas\n    }, error => {\n      if (error.status === 400) {\n        alert('No se encontro el examen pedido');\n      } else if (error.status === 409) {\n        alert('No puedes agregar el mismo examen dos veces ');\n      }\n    });\n  }\n  EliminarExamenesSolicitados(e) {\n    this.http.delete('http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&Nombre=' + e + '&IdConsulta=' + this.datos.IdConsultas).subscribe(response => {\n      alert('Se elimino el examen de la consulta con exito');\n    }, error => {\n      this.subscribirse();\n      alert('Se elimino el examen de la consulta con exito');\n    });\n  }\n  Finalizar() {\n    if (this.MensajeDeConfirmacion) {\n      this.chow = false;\n      const idConsulta = this.datos.IdConsultas;\n      const body = {\n        idConsulta: idConsulta\n      };\n      this.http.put(`http://localhost:8080/Proyecto2Clinica/ControladorConsultas?accion=ActualizarConsulta&IdConsulta=${idConsulta}&Estado=EXAMEN_PENDIENTE`, body).subscribe(response => {\n        alert('Se cambio la consulta a estado examen pendiente');\n        this.cerrado.emit();\n      }, error => {\n        if (error.status === 400) {\n          alert('Error al actualizar la consulta');\n        } else {\n          alert('Error al actualizar');\n        }\n      });\n    } else {\n      alert(\"Recuerda que luego no podras agregar más examenes a la consulta, si ya acabaste presiona finalizar otra vez\");\n      this.MensajeDeConfirmacion = true;\n    }\n  }\n}\nModalAgregarExamenesSolicitudPacientesComponent.ɵfac = function ModalAgregarExamenesSolicitudPacientesComponent_Factory(t) {\n  return new (t || ModalAgregarExamenesSolicitudPacientesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nModalAgregarExamenesSolicitudPacientesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ModalAgregarExamenesSolicitudPacientesComponent,\n  selectors: [[\"app-modal-agregar-examenes-solicitud-pacientes\"]],\n  outputs: {\n    cerrado: \"cerrado\"\n  },\n  decls: 2,\n  vars: 0,\n  template: function ModalAgregarExamenesSolicitudPacientesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"modal-agregar-examenes-solicitud-pacientes works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","ModalAgregarExamenesSolicitudPacientesComponent","constructor","http","ngOnInit","Mostrar","datos","chow","subscribirse","getExamenes","subscribe","examen","examenes","getExamenesAgregados","ExamenesAgregados","url","get","IdConsultas","AgregarExamenSeleccionado","nombre","selectedOption","body","Nombre","post","response","alert","error","status","EliminarExamenesSolicitados","e","delete","Finalizar","MensajeDeConfirmacion","idConsulta","put","cerrado","emit","selectors","outputs","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-paciente\\menu-solicitudes-examenes\\modal-agregar-examenes-solicitud-pacientes\\modal-agregar-examenes-solicitud-pacientes.component.ts","C:\\Users\\branp\\Documents\\NetBeansProjects\\Proyecto2Clinica\\Angular\\ProyectoMedic\\src\\app\\Componentes\\home-paciente\\menu-solicitudes-examenes\\modal-agregar-examenes-solicitud-pacientes\\modal-agregar-examenes-solicitud-pacientes.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-modal-agregar-examenes-solicitud-pacientes',\n  templateUrl: './modal-agregar-examenes-solicitud-pacientes.component.html',\n  styleUrls: ['./modal-agregar-examenes-solicitud-pacientes.component.css']\n})\nexport class ModalAgregarExamenesSolicitudPacientesComponent {\n  @Output() cerrado = new EventEmitter();\n  datos: any;\n  public chow = false;\n  examenes: any;\n  public selectedOption: any;\n  ExamenesAgregados: any;\n  MensajeDeConfirmacion = false;\n  constructor(private http: HttpClient  ) { }\n  ngOnInit() : void  {\n\n  }\n  Mostrar(datos: any){\n    this.datos = datos;\n    this.chow = true;\n    this.subscribirse();\n\n  }\n  subscribirse(){\n    this.getExamenes().subscribe(examen => {\n      this.examenes = examen;\n    });\n    this.getExamenesAgregados().subscribe(examen => {\n      this.ExamenesAgregados = examen;\n    })\n  }\n  getExamenes() {\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorTipoDeExamenes?accion=obtenerExamenes';\n    return this.http.get<any[]>(url);\n  }\n  getExamenesAgregados(){\n    const url = 'http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&id='+this.datos.IdConsultas;\n    return this.http.get<any[]>(url);\n  }\n  AgregarExamenSeleccionado(){\n    const nombre = this.selectedOption;\n    const body = {Nombre: this.selectedOption};\n    this.http.post(`http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=CrearExamenAsignado&NombreExamen=${nombre}&IdConsulta=${this.datos.IdConsultas}`, body).subscribe(\n      response => {\n        alert('Se agrego el examen a la consulta');\n        this.subscribirse();\n        // Actualizar la lista de especialidades agregadas\n      },\n      error => {\n        if (error.status === 400) {\n          alert('No se encontro el examen pedido');\n        } else if(error.status === 409) {\n          alert('No puedes agregar el mismo examen dos veces ');\n        }\n      }\n    );\n  }\n  EliminarExamenesSolicitados(e: any){\n    this.http.delete('http://localhost:8080/Proyecto2Clinica/ControladorExamenesConsultas?accion=obtenerExamenesAgregados&Nombre='+e+'&IdConsulta='+this.datos.IdConsultas).subscribe(\n      (response) => {\n        alert('Se elimino el examen de la consulta con exito');\n      },\n      (error) => {\n        this.subscribirse();\n        alert('Se elimino el examen de la consulta con exito');\n      }\n    );\n  }\n  Finalizar(){\n    if(this.MensajeDeConfirmacion){\n      this.chow = false;\n      \n      const idConsulta = this.datos.IdConsultas;\n      const body = { idConsulta: idConsulta };\n      this.http.put(`http://localhost:8080/Proyecto2Clinica/ControladorConsultas?accion=ActualizarConsulta&IdConsulta=${idConsulta}&Estado=EXAMEN_PENDIENTE`, body).subscribe(\n        response => {\n          alert('Se cambio la consulta a estado examen pendiente');\n          this.cerrado.emit();\n        },\n        error => {\n          if (error.status === 400) {\n            alert('Error al actualizar la consulta');\n          } else {\n            alert('Error al actualizar');\n          }\n        }\n      );\n    }else{\n      alert(\"Recuerda que luego no podras agregar más examenes a la consulta, si ya acabaste presiona finalizar otra vez\");\n      this.MensajeDeConfirmacion = true;\n    }\n  }\n}\n\n","<p>modal-agregar-examenes-solicitud-pacientes works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}